VERSION := $(shell util/version.sh $(CC))

GAME = slex
#GAMEUID =
#GAMEGID =
#GAMEPERM =

INSTALL = install

PREFIX = $(HOME)/slex
GAMEDIR = $(PREFIX)/slex-$(VERSION)
VARDIR = $(GAMEDIR)
#MASTERDIR = $(PREFIX)/slexdir

INSTALL_GAME = $(INSTALL) $(GAMEPERM:%=-m %) $(GAMEGID:%=-g %)
INSTALL_DATA = $(INSTALL) -m 644
INSTALL_DIR = $(INSTALL) -d
INSTALL_VARDIR = $(INSTALL) -d $(GAMEUID:%=-o %) $(GAMEGID:%=-g %)

TOUCH_VARDATA = touch $(1)
TOUCH_VARDATA += $(if $(GAMEUID),&& chown $(GAMEUID) $(1))
TOUCH_VARDATA += $(if $(GAMEGID),&& chgrp $(GAMEGID) $(1))

CFLAGS = -g -O2 -fcommon

CPPFLAGS += -Iinclude
CPPFLAGS += -DDLB
CPPFLAGS += -DDLBFILE=\"nhdat\"
CPPFLAGS += -DDLBAREA=FILE_AREA_SHARE

GAMELIBS = -lncurses

LOCAL_MK = local.mk
-include $(LOCAL_MK)

.DELETE_ON_ERROR:
.PHONY: all install slave clean cleandeps

all: src/$(GAME) dat/nhdat dat/license

install: all $(if $(MASTERDIR),slave)
	$(INSTALL_DIR) $(GAMEDIR)
	$(INSTALL_GAME) src/$(GAME) $(GAMEDIR)
	$(INSTALL_DATA) dat/nhdat dat/license $(GAMEDIR)
	$(INSTALL_VARDIR) $(VARDIR) $(VARDIR)/save
	$(call TOUCH_VARDATA,$(VARDIR)/perm)
	$(call TOUCH_VARDATA,$(VARDIR)/record)
	$(call TOUCH_VARDATA,$(VARDIR)/logfile)
	$(call TOUCH_VARDATA,$(VARDIR)/xlogfile)
	$(call TOUCH_VARDATA,$(VARDIR)/livelog)

ATOMIC_LN = ln $(1) $(2).new && mv $(2).new $(2)

slave:
	$(INSTALL_VARDIR) $(VARDIR) $(VARDIR)/save
	$(call ATOMIC_LN,$(MASTERDIR)/perm,$(VARDIR)/perm)
	$(call ATOMIC_LN,$(MASTERDIR)/record,$(VARDIR)/record)
	$(call ATOMIC_LN,$(MASTERDIR)/logfile,$(VARDIR)/logfile)
	$(call ATOMIC_LN,$(MASTERDIR)/xlogfile,$(VARDIR)/xlogfile)
	$(call ATOMIC_LN,$(MASTERDIR)/livelog,$(VARDIR)/livelog)

##### BINARIES #####

SRCOBJ = allmain.o alloc.o apply.o artifact.o attrib.o ball.o bones.o	\
 botl.o cmd.o dbridge.o decl.o detect.o dig.o display.o dlb.o do.o	\
 do_name.o do_wear.o dog.o dogmove.o dokick.o dothrow.o drawing.o	\
 dungeon.o eat.o end.o engrave.o exper.o explode.o extralev.o files.o	\
 fountain.o gypsy.o hack.o hacklib.o invent.o light.o lock.o mail.o	\
 makemon.o mapglyph.o mcastu.o mhitm.o mhitu.o minion.o mklev.o		\
 mkmap.o mkmaze.o mkobj.o mkroom.o mon.o mondata.o monmove.o monst.o	\
 monstr.o mplayer.o mthrowu.o muse.o music.o o_init.o objects.o		\
 objnam.o options.o pager.o pickup.o pline.o polyself.o potion.o	\
 pray.o priest.o quest.o questpgr.o read.o recover.o rect.o region.o	\
 restore.o rip.o rnd.o role.o rumors.o save.o shk.o shknam.o sit.o	\
 sounds.o sp_lev.o spell.o steal.o steed.o tech.o teleport.o		\
 timeout.o topten.o track.o trap.o u_init.o uhitm.o vault.o version.o	\
 vision.o weapon.o were.o wield.o windows.o wizard.o worm.o worn.o	\
 write.o zap.o livelog.o
SYSUNIXOBJ = unixmain.o unixres.o unixunix.o
SYSSHAREOBJ = ioctl.o unixtty.o
WINTTYOBJ = getline.o termcap.o topl.o wintty.o
WINCURSESOBJ = cursdial.o cursinit.o cursinvt.o cursmain.o cursmesg.o cursmisc.o cursstat.o curswins.o

GAME_O = $(SRCOBJ:%.o=src/%.o) $(SYSUNIXOBJ:%.o=sys/unix/%.o)	\
         $(SYSSHAREOBJ:%.o=sys/share/%.o)			\
         $(WINTTYOBJ:%.o=win/tty/%.o) $(WINCURSESOBJ:%.o=win/curses/%.o)
src/$(GAME): $(GAME_O)
	$(CC) $(LDFLAGS) $^ $(LDLIBS) $(GAMELIBS) -o $@
AUTO_BIN += src/$(GAME)

MAKEDEFS_O = util/makedefs.o src/alloc.o src/monst.o src/objects.o	\
             util/panic.o
util/makedefs: $(MAKEDEFS_O)
	$(CC) $(LDFLAGS) $^ $(LDLIBS) -o $@
AUTO_BIN += util/makedefs

DLB_O = util/dlb_main.o src/alloc.o src/dlb.o util/panic.o
util/dlb: $(DLB_O)
	$(CC) $(LDFLAGS) $^ $(LDLIBS) -o $@
AUTO_BIN += util/dlb

DGN_COMP_O = util/dgn_main.o util/dgn_lex.o util/dgn_yacc.o	\
             src/alloc.o util/panic.o
util/dgn_comp: $(DGN_COMP_O)
	$(CC) $(LDFLAGS) $^ $(LDLIBS) -o $@
AUTO_BIN += util/dgn_comp

LEV_COMP_O = util/lev_main.o util/lev_lex.o util/lev_yacc.o	\
             src/alloc.o src/decl.o src/drawing.o src/monst.o	\
             src/objects.o util/panic.o
util/lev_comp: $(LEV_COMP_O)
	$(CC) $(LDFLAGS) $^ $(LDLIBS) -o $@
AUTO_BIN += util/lev_comp

ALL_O = $(GAME_O) $(MAKEDEFS_O) $(DLB_O) $(DGN_COMP_O) $(LEV_COMP_O)

##### BASIC RULES AND AUTOMATIC DEPENDENCY GENERATION #####

MAKEFLAGS += --no-builtin-rules
.SUFFIXES:

%.o: %.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -MMD -MP -c -o $@ $<

%.d:
	$(CC) $(CFLAGS) $(CPPFLAGS) -MM -MP -MG -MT $*.o -MF $*.d $*.c

ALL_D = $(ALL_O:%.o=%.d)
-include $(ALL_D)

##### AUTOGENERATED SOURCE FILES #####

export VCS_DESCRIPTION := $(shell git describe --always 2>/dev/null)
.git/index: ;
include/date.h: util/makedefs .git/index $(filter-out src/version.o,$(GAME_O))
	cd util && ./makedefs -a  # include/date.h
include/filename.h: util/makedefs
	cd util && ./makedefs -f  # include/filename.h
include/onames.h: util/makedefs
	cd util && ./makedefs -o  # include/onames.h
include/pm.h: util/makedefs
	cd util && ./makedefs -p  # include/pm.h
include/verinfo.h: util/makedefs
	cd util && ./makedefs -w  # include/verinfo.h
AUTO_H += include/date.h include/filename.h include/onames.h	\
          include/pm.h include/verinfo.h

# generating the dependencies of source files requires them to exist,
# so the dependencies of the autogenerated source files have to be
# declared explicitly instead

src/monstr.c: util/makedefs
	cd util && ./makedefs -m  # src/monstr.c
AUTO_C += src/monstr.c

include/dgn_comp.h include/lev_comp.h: include/%_comp.h: util/%_yacc.c
util/dgn_yacc.c util/lev_yacc.c: util/%_yacc.c: util/%_comp.y
	$(YACC) $(YFLAGS) -d -b $* $<
	mv $*.tab.c util/$*_yacc.c
	mv $*.tab.h include/$*_comp.h
AUTO_H += include/dgn_comp.h include/lev_comp.h
AUTO_C += util/dgn_yacc.c util/lev_yacc.c

util/dgn_yacc.o: include/verinfo.h
util/lev_yacc.o: include/onames.h include/pm.h

util/dgn_lex.c util/lev_lex.c: util/%_lex.c: util/%_comp.l
	$(LEX) $(LFLAGS) -t $< > $@
AUTO_C += util/dgn_lex.c util/lev_lex.c

util/dgn_lex.o: include/dgn_comp.h
util/lev_lex.o: include/lev_comp.h include/onames.h include/pm.h

# to bootstrap the dependency generation, we want to not depend on
# autogenerated header files or source files, but we'll still need the
# correct dependencies on and for those when compiling, at least for
# the first time; missing headers are added to the initial dependency
# files without the correct prefix, so we add those here, and we
# already specified the dependencies to the autogenerated header files
# from the autogenerated source files above, so we don't need to
# bootstrap the dependency files for the autogenerated source files
# because they'll be created whenever they're actually compiled
$(AUTO_H:include/%.h=%.h): %.h: include/%.h ;
$(AUTO_C:%.c=%.d): ;

##### DATA FILES #####

QUEST_DES = Abuser.des Acid.des Act.des Altmer.des Amazon.des		\
 Arch.des Artist.des Assassin.des Augurer.des Barb.des Bard.des		\
 Dwarf.des Dopp.des Darkelf.des Gnome.des Hobbit.des		\
 Binder.des Bleeder.des Bloodsee.des Bosmer.des Bully.des Caveman.des	\
 Cheval.des Convict.des Cook.des Courier.des Cyborg.des Deatheat.des	\
 Diver.des Doll.des Drunk.des Dunmer.des Electric.des Elf.des		\
 Elfreal.des Firef.des Flame.des Foxhound.des Gamer.des Gangster.des	\
 Geek.des Gladia.des Goff.des Gradu.des Gunner.des Healer.des Ice.des	\
 Jedi.des Jester.des Knight.des Korsair.des Ladies.des Libra.des	\
 Locks.des Lunatic.des Mahou.des Monk.des Music.des Mystic.des		\
 Necro.des Ninja.des Noble.des Offic.des Ordinat.des Otaku.des		\
 Paladin.des Pickpock.des Pirate.des Polit.des Priest.des Psion.des	\
 Ranger.des Rocker.des Rogue.des Sage.des Saiyan.des Samurai.des	\
 Scient.des Scribe.des Slavemas.des Slayer.des Spacew.des Stunt.des	\
 Supermar.des Thalmor.des Top.des Tourist.des Trans.des Under.des	\
 Fighter.des Fencer.des Suser.des Sexy.des Justice.des Medium.des	\
 Valkyrie.des Wandkeep.des Warrior.des Wizard.des Yeoman.des		\
 Anachr.des Druid.des Marine.des Poison.des Transs.des Unbel.des		\
 Zooke.des Murderer.des Failed.des Camper.des Slime.des Erdrick.des	\
 Feminist.des Form.des Nuclear.des Scholar.des Tracer.des	\
 Element.des Chaos.des Occult.des Wildtal.des Kurwa.des Prost.des	\
 Acu.des Hussy.des Mason.des Demago.des Cellar.des Grenad.des \
 Walsch.des Social.des Cyber.des Dissi.des Astro.des Crack.des \
 Janit.des Smarin.des Yautja.des Xelnaga.des Weirdboy.des \
 Stormboy.des Empath.des Psyker.des Software.des Quarter.des \
 Mastermi.des Tosser.des Symbia.des Pract.des Millsw.des \
 Gender.des Fjorde.des Emera.des Combat.des Aklyst.des Drag.des \
 Carto.des Dancer.des Shoefe.des Secret.des Prever.des Diabl.des \
 Butt.des Halfba.des Noob.des Woman.des Climac.des Slave.des \
 Hedder.des Vanilla.des Shadow.des Jockey.des Alltech.des Spellmas.des




SPEC_DES = beholder.des bigroom.des blkmar.des castle.des compu.des	\
 dragons.des endgame.des exmall.des forge.des frnknstn.des levgn.des		\
 levgx.des emptbgr.des \
 gehennom.des giants.des grund.des guild.des heck.des hellma.des	\
 hitch.des intpla.des key.des knox.des kobold-1.des kobold-2.des	\
 lich.des mall-1.des mall-2.des mall-3.des medusa.des mines.des		\
 mtemple.des newmall.des nightmar.des nymph.des oracle.des rats.des	\
 rndmaze.des rndmazea.des sea.des sheol.des sokoban.des spiders.des	\
 stor-1.des stor-2.des stor-3.des tomb.des tower.des town.des		\
 unheck.des yendor.des ghbigrm.des gehenX.des kwests.des mazes.des

ALL_DES = $(QUEST_DES) $(SPEC_DES)
ALL_TAG = $(ALL_DES:%.des=dat/%.tag)

$(ALL_TAG): dat/%.tag: dat/%.des util/lev_comp
	cd dat && ../util/lev_comp $(<F) && touch $(@F)
AUTO_DAT += $(ALL_TAG)

DAT_NHDAT = cmdhelp data dungeon dungeon2 dungeon3 dungeon4 gypsy.txt help hh history opthelp	\
              dungeon5 dungeon6 dungeon7 dungeon8 options oracles quest.dat rumors wizhelp
dat/nhdat: util/dlb $(DAT_NHDAT:%=dat/%) $(ALL_TAG)
	cd dat && ../util/dlb cf nhdat $(DAT_NHDAT) *.lev
AUTO_DAT += dat/nhdat

dat/data: dat/data.base util/makedefs
	cd util && ./makedefs -d  # dat/data
dat/options: util/makedefs
	cd util && ./makedefs -t  # dat/options
dat/oracles: dat/oracles.txt util/makedefs
	cd util && ./makedefs -h  # dat/oracles
dat/quest.dat: dat/quest.txt util/makedefs
	cd util && ./makedefs -q  # dat/quest.dat
dat/rumors: dat/rumors.tru dat/rumors.fal util/makedefs
	cd util && ./makedefs -r  # dat/rumors
AUTO_DAT += dat/data dat/options dat/oracles dat/quest.dat dat/rumors

dat/dungeon: dat/dungeon.pdf util/dgn_comp
	util/dgn_comp < $< > $@
dat/dungeon.pdf: dat/dungeon.def util/makedefs
	cd util && ./makedefs -e  # dat/dungeon.pdf
dat/dungeon2: dat/dungeon2.pdf util/dgn_comp
	util/dgn_comp < $< > $@
dat/dungeon2.pdf: dat/dungeon2.def util/makedefs
	cd util && ./makedefs -e  # dat/dungeon2.pdf
dat/dungeon3: dat/dungeon3.pdf util/dgn_comp
	util/dgn_comp < $< > $@
dat/dungeon3.pdf: dat/dungeon3.def util/makedefs
	cd util && ./makedefs -e  # dat/dungeon3.pdf
dat/dungeon4: dat/dungeon4.pdf util/dgn_comp
	util/dgn_comp < $< > $@
dat/dungeon4.pdf: dat/dungeon4.def util/makedefs
	cd util && ./makedefs -e  # dat/dungeon4.pdf
dat/dungeon5: dat/dungeon5.pdf util/dgn_comp
	util/dgn_comp < $< > $@
dat/dungeon5.pdf: dat/dungeon5.def util/makedefs
	cd util && ./makedefs -e  # dat/dungeon5.pdf
dat/dungeon6: dat/dungeon6.pdf util/dgn_comp
	util/dgn_comp < $< > $@
dat/dungeon6.pdf: dat/dungeon6.def util/makedefs
	cd util && ./makedefs -e  # dat/dungeon6.pdf
dat/dungeon7: dat/dungeon7.pdf util/dgn_comp
	util/dgn_comp < $< > $@
dat/dungeon7.pdf: dat/dungeon7.def util/makedefs
	cd util && ./makedefs -e  # dat/dungeon7.pdf
dat/dungeon8: dat/dungeon8.pdf util/dgn_comp
	util/dgn_comp < $< > $@
dat/dungeon8.pdf: dat/dungeon8.def util/makedefs
	cd util && ./makedefs -e  # dat/dungeon8.pdf
AUTO_DAT += dat/dungeon dat/dungeon.pdf dat/dungeon2 dat/dungeon2.pdf dat/dungeon3 dat/dungeon3.pdf dat/dungeon4 dat/dungeon4.pdf
AUTO_DAT += dat/dungeon5 dat/dungeon5.pdf dat/dungeon6 dat/dungeon6.pdf dat/dungeon7 dat/dungeon7.pdf dat/dungeon8 dat/dungeon8.pdf

##### CLEANING UP #####

clean:
	rm -f $(AUTO_BIN)
	rm -f $(ALL_O)

	rm -f $(AUTO_H)
	rm -f $(AUTO_C)

	rm -f $(AUTO_DAT)
	rm -f dat/*.lev

cleandeps: clean
	rm -f $(ALL_D)
